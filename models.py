from sqlalchemy import create_engine, Column, Integer, String, Boolean, Float, Date, Table
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, relationship, backref
from sqlalchemy import ForeignKey
from constants import engine

# engine = create_engine('postgresql://andreaserga:Patrik78@localhost:5432/mlb_db', echo=True)
Session = sessionmaker(bind=engine)
session = Session()

Base = declarative_base()

def create_tables():
    Base.metadata.create_all(engine)

class Team(Base):
    __tablename__ = 'team'
    id = Column(Integer, primary_key=True)
    name = Column(String, index=True)
    link = Column(String)
    teamcode = Column(String)
    abbreviation = Column(String)
    shortname = Column(String)
    division_id = Column(Integer)
    division_name = Column(String)
    league_id = Column(Integer)
    league_name = Column(String)
    sport_id = Column(Integer)
    sport_name = Column(String)
    springleague_id = Column(Integer)
    springleague_name = Column(String)
    venue_id = Column(Integer)
    venue_name = Column(String)
    venue_link = Column(String)
    # relationship("Child", back_populates="parent")
    players = relationship('Player', back_populates="team")

    def __repr__(self):
        return "<Teams(name='%s', teamcode='%s', division_name='%s')>" % (self.name, self.teamcode, self.division_name)

class Player(Base):
    __tablename__ = 'player'
    jerseynumber = Column(Integer)
    parentteamid = Column(Integer)
    person_id = Column(Integer, primary_key=True)
    person_fullname = Column(String)
    person_link = Column(String)
    position_code = Column(Integer)
    position_name = Column(String)
    position_type = Column(String)
    position_abbreviation = Column(String)
    status_code = Column(String)
    status_description = Column(String)
    updated = Column(Date)
    team_id = Column(Integer, ForeignKey('team.id'))
    team = relationship("Team", back_populates="players")

game_to_stats_association_table = Table('game_to_stats_association', Base.metadata,
    Column('game_id', Integer, ForeignKey('game.id')),
    Column('gamestat_id', Integer, ForeignKey('gamestat.id'))
)

class Game(Base):
    __tablename__ = 'game'
    id = Column(Integer, primary_key=True)
    gamepk = Column(Integer)
    link = Column(String)
    gametype = Column(String)
    season = Column(String)
    gamedate = Column(Date)
    calendareventid = Column(String)
    seriesdescription = Column(String)
    away_team_name = Column(String)
    away_team_id = Column(Integer)
    away_score = Column(Integer)
    home_team_name = Column(String)
    home_team_id = Column(Integer)
    away_leaguerecord_pct = Column(Float)
    home_leaguerecord_pct = Column(Float)
    home_score = Column(Integer)
    home_iswinner = Column(Boolean)
    away_iswinner = Column(Boolean)
    venue_id = Column(Integer)
    venue_name = Column(String)
    status_statuscode = Column(String)
    status_codedgamestate = Column(String)
    status_detailedstate = Column(String)
    boxscore = Column(String)
    home_pitcher_id = Column(Integer)
    away_pitcher_id = Column(Integer)
    # game_players = Column(ForeignKey='player.person_id')
    game_players_id = relationship("Gamestat",secondary=game_to_stats_association_table,back_populates="game_ids")


class Gamestat(Base):
    __tablename__ = 'gamestat'
    id = Column(Integer, primary_key=True)
    gamepk = Column(Integer)
    gamedate = Column(Date)
    homegame = Column(Boolean)
    team_name = Column(String)
    team_id = Column(Integer)
    player_id = Column(Integer)
    player_fullname = Column(String)
    player_link = Column(String)
    position_code = Column(Float)
    position_name = Column(String)
    position_type = Column(String)
    batting_gamesplayed = Column(Float)
    batting_flyouts = Column(Float)
    batting_groundouts = Column(Float)
    batting_runs = Column(Float)
    batting_doubles = Column(Float)
    batting_triples = Column(Float)
    batting_homeruns = Column(Float)
    batting_strikeouts = Column(Float)
    batting_baseonballs = Column(Float)
    batting_intentionalwalks = Column(Float)
    batting_hits = Column(Float)
    batting_hitbypitch = Column(Float)
    batting_atbats = Column(Float)
    batting_caughtstealing = Column(Float)
    batting_stolenbases = Column(Float)
    batting_groundintodoubleplay = Column(Float)
    batting_groundintotripleplay = Column(Float)
    batting_plateappearances = Column(Float)
    batting_totalbases = Column(Float)
    batting_rbi = Column(Float)
    batting_leftonbase = Column(Float)
    batting_sacbunts = Column(Float)
    batting_sacflies = Column(Float)
    batting_catchersinterference = Column(Float)
    batting_pickoffs = Column(Float)
    fielding_assists = Column(Float)
    fielding_putouts = Column(Float)
    fielding_errors = Column(Float)
    fielding_chances = Column(Float)
    fielding_fielding = Column(Float)
    fielding_caughtstealing = Column(Float)
    fielding_passedball = Column(Float)
    fielding_stolenbases = Column(Float)
    fielding_pickoffs = Column(Float)
    pitching_gamesplayed = Column(Float)
    pitching_gamesstarted = Column(Float)
    pitching_groundouts = Column(Float)
    pitching_airouts = Column(Float)
    pitching_runs = Column(Float)
    pitching_doubles = Column(Float)
    pitching_triples = Column(Float)
    pitching_homeruns = Column(Float)
    pitching_strikeouts = Column(Float)
    pitching_baseonballs = Column(Float)
    pitching_intentionalwalks = Column(Float)
    pitching_hits = Column(Float)
    pitching_hitbypitch = Column(Float)
    pitching_atbats = Column(Float)
    pitching_caughtstealing = Column(Float)
    pitching_stolenbases = Column(Float)
    pitching_numberofpitches = Column(Float)
    pitching_inningspitched = Column(Float)
    pitching_wins = Column(Float)
    pitching_losses = Column(Float)
    pitching_saves = Column(Float)
    pitching_saveopportunities = Column(Float)
    pitching_holds = Column(Float)
    pitching_blownsaves = Column(Float)
    pitching_earnedruns = Column(Float)
    pitching_battersfaced = Column(Float)
    pitching_outs = Column(Float)
    pitching_gamespitched = Column(Float)
    pitching_completegames = Column(Float)
    pitching_shutouts = Column(Float)
    pitching_pitchesthrown = Column(Float)
    pitching_balls = Column(Float)
    pitching_strikes = Column(Float)
    pitching_strikepercentage = Column(Float)
    pitching_hitbatsmen = Column(Float)
    pitching_balks = Column(Float)
    pitching_wildpitches = Column(Float)
    pitching_pickoffs = Column(Float)
    pitching_rbi = Column(Float)
    pitching_gamesfinished = Column(Float)
    pitching_runsscoredper9 = Column(Float)
    pitching_homerunsper9 = Column(Float)
    pitching_inheritedrunners = Column(Float)
    pitching_inheritedrunnersscored = Column(Float)
    pitching_catchersinterference = Column(Float)
    pitching_sacbunts = Column(Float)
    pitching_sacflies = Column(Float)
    pitching_flyouts = Column(Float)
    game_ids = relationship("Game", secondary=game_to_stats_association_table, back_populates="game_players_id")